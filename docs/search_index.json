[
["ch5.html", "Chapter 5 Large Data Manipulation Chapter Overview Before You Begin 5.1 Aquiring and Loading Packages", " Chapter 5 Large Data Manipulation Chapter Overview Any data analyst will tell you that oftentimes the most difficult part of an analysis is simply getting the data in the proper format. Real data sets are messy: they have missing values, variables are often stored in multiple columns but would be better stored as rows, the same factor level may be coded as two or more different types (&quot;hatch&quot;, “Hatch”, and &quot;HATCH&quot; are all treated differently in R). You get the point: sometimes significant data-wrangling may be required before you perform an analysis. In this chapter, you will learn the more advanced data manipulation in R using two R packages: reshape2: used for changing data between formats (wide and long) dplyr: used for large data manipulations with a consistent and readable format. You will be turning daily observations of harvest and escapement (fish that are not harvested) into annual totals for the purpose of fitting a spawner-recruit analysis on a hypothetical pink salmon (Oncorhynchus gorbuscha) data set. More details and context on these terms and topics will be provided later. IMPORTANT NOTE: If you did not attend the sessions corresponding to Chapters 1 or 2, you are recommended to walk through the material found in those chapters before proceeding to this material. Additionally, you will find the material in Section 3.4 helpful for the end of this chapter. Remember that if you are confused about a topic, you can use CTRL + F to find previous cases where that topic has been discussed in this document. Before You Begin You should create a new directory and R script for your work in this Chapter. Create a new R script called Ch5.R and save it in the directory C:/Users/YOU/Documents/R-Workshop/Chapter5. Set your working directory to that location. Revisit the material in Sections 1.2 and 1.3 for more details on these steps. Download the data sets daily_esc.csv and daily_harvest.csv from GitHub, reminder and place them in your working directory. 5.1 Aquiring and Loading Packages An R package is a bunch of code, documentation, and data that someone has written and bundled into a consistent format that allows other R users to install and use in their R sessions. R packages make R incredibly flexible and extensible. If you are trying to do a specialized analysis that is not included in the base R distribution, it is likely that someone has already written a package to allow you to do it! You will be using some new packages that you likely don’t already have on your computer, so you will need to install them first: install.packages(&quot;dplyr&quot;) install.packages(&quot;reshape2&quot;) This requires an internet connection. You will see some text display in the console telling you the packages are being installed. This only needs to be done once for each version of R you have. If you install a new version of R, you will likely need to update your packages (i.e., re-install them). Now that the packages are on your computer, you will need to load them into the current session: library(dplyr) ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union library(reshape2) "]
]
